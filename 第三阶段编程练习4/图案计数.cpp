/*****
描述
    一张画布里有n行*m列个格子，其中有的格子里有颜色填充，有的格子是空的没有颜色填充。现在需要你写一个程
    序来数出画布里边有颜色填充的格子构成了多少个图案，其中图案的定义为：
    如果两个有颜色的格子边相邻或者角相邻（即横、纵两个方向上的位置差都不超过1），则他们属于同一个图案。
关于输入
    第一行为两个整数n和m（1<=n, m<=200）。
    之后的n行，每行为一个长度为m的字符串，构成了整个画布。字符串中，#表示颜色，-表示空白。
关于输出
    一个整数，表示图案的个数
例子输入
    19 48
    ------------------------------------------------
    ---####-----#-----#----------------------####---
    --######----#-----#---------------------######--
    -########--#-#---#-#####--#-##-##---#--########-
    -###--###--#-#---#-#----#-##-##--#--#--###--###-
    -###--###--#--#-#--######-#--#---#-#---###--###-
    -########--#--#-#--#------#--#----##---########-
    --######---#---#---######-#--#-----#----######--
    ---####----------------------------#-----####---
    ----------------------------------#-------------
    ------------------------------------------------
    ---###--#--------#------#-----------------------
    --#---#-#---------------#-----------------------
    -#------#-##--#-##--##-###-#-##-###--###-#--##--
    -#------##--#-##-#-#----#--##--#---##---##-#----
    -#------#---#-#--#--#---#--#---#---##----#--#---
    --#---#-#---#-#--#---#--#--#---#---##---##---#--
    ---###--#---#-#--#-##---#--#---#---#-###-#-##---
    ------------------------------------------------
例子输出
    12
*****/

#include <iostream>
using namespace std;

#define MAX_N 300
#define COLOR '#'
#define BLANK '-'

void debug_print(char** a, int n, int m)
{
    cout << endl;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
            cout << a[i][j];
        cout << endl;
    }
    cout << endl;
}

void remove_color(char** a, int n, int m, int i, int j)
{
    const int nd = 8;
    int di[nd] = {1, -1, 0, 0, 1, 1, -1, -1};
    int dj[nd] = {0, 0, 1, -1, 1, -1, 1, -1};
    if (i < 0 || j < 0 || i >= n || j >= m) // 出界，终止
        return;
    if (a[i][j] == BLANK)                   // 走到空白块，终止
        return;
    a[i][j] = BLANK;    // 去除颜色
    for (int d = 0; d < nd; d++)
        remove_color(a, n, m, i+di[d], j+dj[d]);
}

int main()
{
    char **arr = NULL;
    int n = 0, m = 0, cnt = 0;
    cin >> n >> m;
    arr = new char*[n];
    for (int i = 0; i < n; i++)
    {
        arr[i] = new char[m];
        for (int j = 0; j < m; j++)
            cin >> arr[i][j];
    }
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            if (arr[i][j] == COLOR)
            {
                cnt++;
                remove_color(arr, n, m, i, j);
            }
    // debug_print(arr, n, m);
    cout << cnt;
    return 0;
}
