/*****
描述
    计算概论班级一共有150名同学，学号分别为N1到N150。期末考试后，老师决定请部分同学喝奶茶，但是大家都很优秀，老师没办法进行挑选。于是助教们想了这样一种挑选幸运同学的方法：
    给每位同学一个编号牌，仅在正面写有该名同学编号i，编号与学号数字相同，即学号为Ni的同学得到的编号牌正面写有数字i。
    然后将所有编号牌正面朝上放到桌子上，同学们按照编号从小到大依次进行如下操作：
    N1同学把所有编号牌翻面一次；
    N2同学把编号为2、4、6、8 ... 148、150的编号牌翻面一次；
    N3同学把编号为3、6、9 ... 147、150的编号牌翻面一次；
    N4同学把编号为4、8、12 ... 144、148的编号牌翻面一次；
    ......
    以此规律直到150名同学操作完为止，规定正面朝下的编号牌对应的同学能够喝老师请的奶茶。
    请编写程序计算这些幸运的同学的人数，并按照数字从小到大的顺序依次输出其学号。
关于输入
    无
关于输出
    第一行为幸运同学的学号，以空格间隔
    第二行为幸运同学的人数
例子输入
    -
例子输出
    -
*****/

#include <iostream>
using namespace std;

#define MAX_N 1000

bool stu[MAX_N] = {false}; // false为正面朝上，true为反面朝上
int n = 150;

int main()
{
    bool first_output = true;
    int cnt = 0;
    for (int i = 1; i <= n; i++)
        for (int j = i; j <= n; j += i)
            stu[j] = !stu[j];
    for (int i = 1; i <= n; i++)
        if (stu[i])
        {
            if (first_output)
                first_output = false;
            else
                cout << " ";
            cout << "N" << i;
            cnt++;
        }
    cout << endl << cnt;
    return 0;
}
