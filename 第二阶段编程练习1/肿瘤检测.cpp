/*****
描述
    一张CT扫描的灰度图像可以用一个N*N（0< N< 100）的矩阵描述，矩阵上的每个点对应一个灰度值（整数），其取值范围是0-255。
    我们假设给定的图像中有且只有一个肿瘤。在图上监测肿瘤的方法如下：如果某个点对应的灰度值小于等于50，则这个点在肿瘤上，
    否则不在肿瘤上。我们把在肿瘤上的点的数目加起来，就得到了肿瘤在图上的面积。任何在肿瘤上的点，如果它是图像的边界或者它
    的上下左右四个相邻点中至少有一个是非肿瘤上的点，则该点称为肿瘤的边界点。肿瘤的边界点的个数称为肿瘤的周长。现在给定一
    个图像，要求计算其中的肿瘤的面积和周长。
关于输入
    输入第一行包含一个正整数N (0< N< 100) 表示图像的大小；接下来N行，每行包含图像的一行。图像的一行用N个整数表示（所有整
    数大于等于0，小于等于255），两个整数之间用一个空格隔开。
关于输出
    输出只有一行，该行包含两个正整数，分别为给定图像中肿瘤的面积和周长，用一个空格分开。
例子输入
    6
    99 99 99 99 99 99
    99 99 99 50 99 99
    99 99 49 49 50 51
    99 50 20 25 52 99
    40 50 99 99 99 99
    99 99 99 99 99 99
例子输出
    9 8
*****/

#include <iostream>
using namespace std;

#define MAX_N 1000
#define THRESHOLD 50


int image[MAX_N][MAX_N] = {0}, n = 0;
int S = 0, C = 0;
int dx[4] = {1, -1, 0, 0}, dy[4] = {0, 0, 1, -1};   // 四个方向

bool is_tumor(int x, int y)
{
    return image[x][y] <= THRESHOLD;
}

int main()
{
    cin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> image[i][j];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            if (is_tumor(i, j))
            {
                S++;
                if (i == 0 || i == n-1 || j == 0 || j == n-1)   // 边界上
                {
                    C++;
                    continue;
                }
                for (int d = 0; d < 4; d++) // 检查该点四个方向
                    if (!is_tumor(i+dx[d], j+dy[d]))
                    {
                        C++;
                        break;
                    }
            }
    cout << S << " " << C;
    return 0;
}
